FUNCTION_BLOCK intelliroads

    VAR_INPUT
        Speed       : REAL; (* RANGE(0 .. 180) *)
        DeltaVolume : REAL; (* RANGE(-650 .. 650) *)
    END_VAR

    VAR_OUTPUT
        Cost : REAL; (* RANGE(0 .. 1) *)
    END_VAR

    FUZZIFY Speed
        TERM Low   := (0,0) (0, 1) (80, 0) ;
        TERM Medium  := (40, 0) (80, 1) (120, 0) ;
        TERM High   := (80, 0) (180, 1) (180,0) ;
    END_FUZZIFY

    FUZZIFY DeltaVolume
        TERM Negative := (-650, 0) (-650, 1) (0, 0)  ;
        TERM Null     := (-300, 0) (0, 1) (300, 0) ;
        TERM Positive := (0, 0) (650, 1) (650, 0) ;
    END_FUZZIFY

    DEFUZZIFY Cost
        TERM VeryLow  := (0, 0) (0.05, 1) (0.25, 0) ;
        TERM Low       := (0, 0) (0.25, 1) (0.5, 0) ;
        TERM Medium    := (0.25, 0) (0.5, 1) (0.75, 0) ;
        TERM High      := (0.5, 0) (0.75, 1) (1, 0) ;
        TERM VeryHigh := (0.75, 0) (0.95, 1) (1, 0) ;

        ACCU: MAX;
        METHOD: COG;(*MoM;*)
        DEFAULT := 1;
    END_DEFUZZIFY

    RULEBLOCK first
        AND: MIN;
        (*ACCU:MAX;*)

        RULE 0 : IF (Speed IS Low) AND (DeltaVolume IS Negative) THEN (Cost IS VeryHigh);
        RULE 1 : IF (Speed IS Low) AND (DeltaVolume IS Null) THEN (Cost IS High);
        RULE 2 : IF (Speed IS Low) AND (DeltaVolume IS Positive) THEN (Cost IS Medium);
        RULE 3 : IF (Speed IS Medium) AND (DeltaVolume IS Negative) THEN (Cost IS High);
        RULE 4 : IF (Speed IS Medium) AND (DeltaVolume IS Null) THEN (Cost IS Medium);
        RULE 5 : IF (Speed IS Medium) AND (DeltaVolume IS Positive) THEN (Cost IS Low);
        RULE 6 : IF (Speed IS High) AND (DeltaVolume IS Negative) THEN (Cost IS Medium);
        RULE 7 : IF (Speed IS High) AND (DeltaVolume IS Null) THEN (Cost IS Low);
        RULE 8 : IF (Speed IS High) AND (DeltaVolume IS Positive) THEN (Cost IS VeryLow);

    END_RULEBLOCK
 
END_FUNCTION_BLOCK
